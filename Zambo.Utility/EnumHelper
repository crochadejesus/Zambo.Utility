using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Web.Mvc;

namespace Value.Site.Extensions
{
    public static class EnumHelper
    {
        public static List<SelectListItem> BuildSelectListItems(Type t)
        {
            var currentCulture = LanguageResources.Resources.Culture;

            return Enum.GetValues(t)
                       .Cast<Enum>()
                       .Select(e => new SelectListItem { Value = e.ToString(), Text = LanguageResources.Resources.ResourceManager.GetString(e.ToString(), currentCulture) }).ToList();
        }

        // Get the value of the description attribute if the
        // enum has one, otherwise use the value.
        public static string GetDescription<TEnum>(this TEnum value)
        {
            var fi = value.GetType().GetField(value.ToString());

            if (fi != null)
            {
                var attributes = (DescriptionAttribute[])fi.GetCustomAttributes(typeof(DescriptionAttribute), false);

                if (attributes.Length > 0)
                {
                    return attributes[0].Description;
                }
            }

            return value.ToString();
        }
    }
}
